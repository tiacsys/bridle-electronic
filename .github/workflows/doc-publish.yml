# Copyright (c) 2021-2022 TiaC Systems
# SPDX-License-Identifier: Apache-2.0

name: Documentation Publish

on:
  workflow_run:
    workflows: ["Documentation Build", "Documentation Remove"]
    types: [completed]

jobs:
  doc-publish:
    name: Publish archived documentation actions from artifacts
    runs-on: ubuntu-20.04
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: ðŸ“¥ Download artifact
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{ github.event.workflow_run.id }},
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "doc"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            let writeStream = fs.createWriteStream('${{ github.workspace }}/doc.zip', 'binary');
            download.data.pipe(writeStream);
    #       let readStream = fs.createReadStream(download.data, 'binary');
    #       readStream.pipe(writeStream);
    #       fs.writeFileSync('${{ github.workspace }}/doc.zip', Buffer.from(download.data), 'binary');

    # - name: ðŸ“¥ Download artifact
    #   uses: dawidd6/action-download-artifact@v2
    #   with:
    #     run_id: ${{ github.event.workflow_run.id }}
    #     if_no_artifact_found: warn
    #     skip_unpack: true
    #     name: doc

      - name: ðŸ“¤ Upload documentation
        env:
          HOST: ${{ secrets.TSN_BRIDLE_DOCROOT_HOST }}
          PORT: ${{ secrets.TSN_BRIDLE_DOCROOT_PORT }}
          USER: ${{ secrets.TSN_BRIDLE_DOCROOT_USER }}
          KEY: ${{ secrets.TSN_BRIDLE_DOCROOT_KEY }}
          INBOX: ${{ secrets.TSN_BRIDLE_DOCROOT_INBOX }}
        run: |
          ls -R
          unzip doc.zip
        # mkdir -p ~/.ssh && \
        #   ssh-keyscan -p ${PORT} ${HOST} >> ~/.ssh/known_hosts
        # touch ~/.ssh/private && \
        #   chmod 600 ~/.ssh/private && \
        #   echo -e "${KEY}" > ~/.ssh/private
        # # Don't upload the archive and workflow metadata
        # files=$(ls -I doc.zip -I pr.txt)
        # for file in ${files}; do
        #   scp -i ~/.ssh/private "${file}" "scp://${USER}@${HOST}:${PORT}/${INBOX}/${file}"
        # done
